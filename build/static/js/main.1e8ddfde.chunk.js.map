{"version":3,"sources":["Components/SongList.js","actions/index.js","Components/SongDetail.js","Components/App.js","reducers/index.js","index.js"],"names":["SongList","this","props","songs","map","song","className","onClick","selectSong","title","renderList","React","Component","connect","state","type","payload","selectedSong","duration","App","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"+LAIMA,E,2KACc,IAAD,OACX,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAAAC,GACxB,OACI,sBAAKC,UAAU,OAAf,UACQ,qBAAKA,UAAU,wBAAf,SACI,wBACCA,UAAU,oBACVC,QAAS,kBAAI,EAAKL,MAAMM,WAAWH,IAFpC,sBAQJ,qBAAKC,UAAU,UAAf,SACKD,EAAKI,UAXSJ,EAAKI,Y,+BAmBpC,OAAO,qBAAKH,UAAU,kBAAf,SAAkCL,KAAKS,mB,GAvBnCC,IAAMC,WAiCdC,eANM,SAACC,GAEhB,MAAO,CAACX,MAAOW,EAAMX,SAIO,CAAEK,WCpCP,SAAAH,GACzB,MAAM,CACFU,KAAM,gBACNC,QAASX,KDiCFQ,CAAmCb,GEVlCa,eAJG,SAACC,GACjB,MAAO,CAAET,KAAKS,EAAMG,gBAGPJ,EAxBG,SAAC,GAAY,IAAXR,EAAU,EAAVA,KAEjB,OAAIA,EAIG,gCACH,8CAGA,uCACWA,EAAKI,MACR,uBAFR,YAGcJ,EAAKa,eAVhB,oDCYIC,EAfH,WACZ,OACE,qBAAKb,UAAU,mBAAf,SACE,sBAAKA,UAAU,SAAf,UACA,qBAAKA,UAAU,oBAAf,SACA,cAAC,EAAD,MAEA,qBAAKA,UAAU,oBAAf,SACI,cAAC,EAAD,YC0BOc,cAAgB,CAC3BjB,MApCiB,WACjB,MAAO,CACH,CACIM,MAAO,YACPS,SAAU,QAEd,CACIT,MAAO,YACPS,SAAU,QAEd,CACIT,MAAO,iBACPS,SAAS,QAEb,CACIT,MAAO,aACPS,SAAS,QAEb,CACIT,MAAO,WACPS,SAAS,UAiBjBD,aAXwB,WAAgC,IAA/BA,EAA8B,uDAAjB,KAAMI,EAAW,uCACvD,MAAkB,iBAAfA,EAAON,KACCM,EAAOL,QAEXC,KCrBXK,IAASC,OACT,cAAC,IAAD,CAAUC,MAAOC,YAAYC,GAA7B,SACA,cAAC,EAAD,MAECC,SAASC,cAAc,Y","file":"static/js/main.1e8ddfde.chunk.js","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {selectSong} from '../actions'; //importing NAMED EXPORT\n\nclass SongList extends React.Component {\n    renderList ()  {\n        return this.props.songs.map(song => {\n            return (\n                <div className=\"item\" key={song.title}>\n                        <div className=\"right floated content\">\n                            <button\n                             className=\"ui button primary\"\n                             onClick={()=>this.props.selectSong(song)}\n                             >\n                                Select\n                            </button>\n                        </div>\n\n                        <div className=\"content\">\n                            {song.title}\n                        </div>\n                    \n                </div>\n            );\n        });\n    } \n    render() {\n            return <div className=\"ui divided list\">{this.renderList()}</div>\n        }\n};\n\n  const showStatus = (state) => {\n      \n      return {songs: state.songs};\n  }\n\n\nexport default connect(showStatus,{ selectSong })(SongList);","    \n export   const selectSong = song => {   //Named export\n    return{\n        type: 'SONG_SELECTED',\n        payload: song\n\n    };\n};\n\n","import  React from 'react';\nimport {connect} from 'react-redux';\n\nconst SongDetail = ({song}) => {\n\n    if(!song) {\n    return <div>Choose a song </div>;\n    };\n      \n    return <div>\n        <h3>\n            Details For:\n        </h3>\n        <p>\n            Title:{song.title}\n                <br></br>\n            Duration:{song.duration}\n        </p>\n\n         </div>\n};\n\n\nconst showStatus = (state) => {\n   return { song:state.selectedSong}\n};\n \nexport default  connect(showStatus)(SongDetail);\n\n","import React from \"react\";\nimport SongList from './SongList';\nimport SongDetail from './SongDetail'\nconst App = () => {\nreturn (\n  <div className=\"ui continer grid\">\n    <div className=\"ui row\">\n    <div className=\"column eight wide\">\n    <SongList />\n    </div>\n    <div className=\"column eight wide\">\n        <SongDetail />\n    </div>\n    </div>\n  </div>\n);\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\n\nconst songsReducer = () => {\n    return [\n        {\n            title: 'No Scrubs', \n            duration: '4:05' \n        },\n        {\n            title: 'Marcarena',\n            duration: '2:30'\n        },\n        {\n            title: 'Lovesick girls',\n            duration:'3:05'\n        },\n        {\n            title: 'Levitating',\n            duration:'2:15'\n        },\n        {\n            title: 'All Star',\n            duration:'3:15'\n        },\n\n    ];\n};\n\nconst selectedSongReducer = (selectedSong=null, action) => {\n    if(action.type == 'SONG_SELECTED') {\n        return action.payload;\n    }\n    return selectedSong;\n };\n\n\n\nexport default combineReducers({\n    songs: songsReducer,\n    selectedSong: selectedSongReducer\n });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","//library\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from 'react-redux';\nimport {createStore} from 'redux';\n\n\n//own code\nimport App from \"./Components/App\";\nimport reducers from './reducers';\n\nReactDOM.render(\n<Provider store={createStore(reducers)}>\n<App />\n</Provider>,\n document.querySelector(\"#root\"));\n    \n"],"sourceRoot":""}